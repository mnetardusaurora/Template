// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  clerkId   String?  @unique @map("clerk_id") // Clerk user ID
  role      UserRole @default(USER)
  metadata  Json?    // Additional user metadata
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  sessions Session[]

  @@map("users")
}

// Session model for tracking user sessions
model Session {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  token     String   @unique
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([token])
  @@map("sessions")
}

// User roles
enum UserRole {
  USER
  ADMIN
  MODERATOR
}

// Example: Extend with additional models as needed
// Uncomment and customize for your application

// model Post {
//   id        String   @id @default(cuid())
//   title     String
//   content   String?
//   published Boolean  @default(false)
//   authorId  String   @map("author_id")
//   createdAt DateTime @default(now()) @map("created_at")
//   updatedAt DateTime @updatedAt @map("updated_at")
//
//   author User @relation(fields: [authorId], references: [id], onDelete: Cascade)
//
//   @@index([authorId])
//   @@map("posts")
// }
