# =============================================================================
# BACKEND ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env.development, .env.staging, or .env.production
# and fill in the appropriate values for each environment.
#
# NEVER commit actual .env files to git!
# Configure production secrets in AWS Amplify Console > App Settings > Environment Variables
# =============================================================================

# Environment Identifier
# Values: development, staging, production
NODE_ENV=development

# Server Configuration
PORT=3001

# =============================================================================
# CORS CONFIGURATION
# =============================================================================
# Frontend URL for CORS
# Development: http://localhost:5173
# Staging: https://staging.yourdomain.com
# Production: https://yourdomain.com
CORS_ORIGIN=http://localhost:5173

# =============================================================================
# CLERK AUTHENTICATION
# =============================================================================
# Get these from your Clerk dashboard at https://dashboard.clerk.com
#
# CRITICAL SECURITY NOTE:
# - Use Clerk Development instance keys for development AND staging
# - Use Clerk Production instance keys for production ONLY
#
# Development/Staging Keys:
#   CLERK_PUBLISHABLE_KEY=pk_test_[your_key_here]
#   CLERK_SECRET_KEY=sk_test_[your_key_here]
#
# Production Keys:
#   CLERK_PUBLISHABLE_KEY=pk_live_[your_key_here]
#   CLERK_SECRET_KEY=sk_live_[your_key_here]
#
# WARNING: NEVER commit secret keys (sk_*) to version control!
# =============================================================================

CLERK_PUBLISHABLE_KEY=pk_test_your_publishable_key_here
CLERK_SECRET_KEY=sk_test_your_secret_key_here

# =============================================================================
# JWT CONFIGURATION
# =============================================================================
# Generate unique secure random strings for each environment
# Use: openssl rand -base64 32
#
# IMPORTANT: Use DIFFERENT secrets for staging and production!
JWT_SECRET=your-super-secret-jwt-key-CHANGE-THIS
JWT_EXPIRES_IN=15m
REFRESH_TOKEN_SECRET=your-super-secret-refresh-token-key-CHANGE-THIS
REFRESH_TOKEN_EXPIRES_IN=7d

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL connection string (if using Prisma)
# Use separate databases for development, staging, and production
#
# Development: postgresql://username:password@localhost:5432/template_dev
# Staging: postgresql://username:password@staging-db.region.rds.amazonaws.com:5432/template_staging
# Production: postgresql://username:password@prod-db.region.rds.amazonaws.com:5432/template_prod
DATABASE_URL="postgresql://username:password@localhost:5432/template_db"

# =============================================================================
# STRIPE CONFIGURATION (Optional)
# =============================================================================
# CRITICAL: Stripe uses different keys for test mode vs live mode
#
# Test Mode (Development/Staging):
#   STRIPE_SECRET_KEY=sk_test_[your_key_here]
#   STRIPE_PUBLISHABLE_KEY=pk_test_[your_key_here]
#   STRIPE_WEBHOOK_SECRET=whsec_[your_key_here]
#
# Live Mode (Production):
#   STRIPE_SECRET_KEY=sk_live_[your_key_here]
#   STRIPE_PUBLISHABLE_KEY=pk_live_[your_key_here]
#   STRIPE_WEBHOOK_SECRET=whsec_[your_key_here]
#
# WARNING: NEVER commit secret keys or webhook secrets to version control!
# =============================================================================

STRIPE_SECRET_KEY=
STRIPE_PUBLISHABLE_KEY=
STRIPE_WEBHOOK_SECRET=

# =============================================================================
# AURORA IDENTITY INTEGRATION (Optional)
# =============================================================================
# Set if integrating with Aurora Identity platform
# Use different API keys for staging vs production
#
# Staging: https://staging-api.auroraidentity.com
# Production: https://api.auroraidentity.com
AURORA_IDENTITY_API_URL=
AURORA_IDENTITY_API_KEY=

# =============================================================================
# LOGGING & MONITORING
# =============================================================================
LOG_LEVEL=info

# =============================================================================
# RATE LIMITING
# =============================================================================
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# =============================================================================
# EXTERNAL SERVICES (Optional Examples)
# =============================================================================
# EMAIL_SERVICE_API_KEY=your-email-service-key
# STORAGE_ACCESS_KEY=your-storage-access-key
# THIRD_PARTY_API_URL=https://api.example.com